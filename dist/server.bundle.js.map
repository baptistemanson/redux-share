{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///server.bundle.js","webpack:///webpack/bootstrap f78d6684d33e07cdf97c","webpack:///./src/redux-share-server.js","webpack:///external \"body-parser\"","webpack:///external \"express\"","webpack:///external \"ws\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","bodyParser","WebSocketServer","Server","express","ReduxShareServer","store","server","options","wss","defaultOptions","debug","onConnection","onActionReceived","shouldSend","repeaterMode","assign","on","socket","message","log","action","JSON","parse","apply","dispatch","broadcastMode","broadcastAction","s","bind","value","_console","console","concat","Array","slice","arguments","router","Router","use","urlencoded","extended","json","post","req","res","body","send","stringify","success","end","get","getState","property","clients","filter","undefined","map","sendToAction","tracedAction","origin"],"mappings":"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","file":"server.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"body-parser\"), require(\"express\"), require(\"ws\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"body-parser\", \"express\", \"ws\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReduxShareServer\"] = factory(require(\"body-parser\"), require(\"express\"), require(\"ws\"));\n\telse\n\t\troot[\"ReduxShareServer\"] = factory(root[\"body-parser\"], root[\"express\"], root[\"ws\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"body-parser\"), require(\"express\"), require(\"ws\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"body-parser\", \"express\", \"ws\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReduxShareServer\"] = factory(require(\"body-parser\"), require(\"express\"), require(\"ws\"));\n\telse\n\t\troot[\"ReduxShareServer\"] = factory(root[\"body-parser\"], root[\"express\"], root[\"ws\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar bodyParser = __webpack_require__(1);\n\tvar WebSocketServer = __webpack_require__(3).Server;\n\tvar express = __webpack_require__(2);\n\t\n\tvar ReduxShareServer = function () {\n\t  /**\n\t   * Constructor of the server\n\t   *\n\t   * @param store\n\t   * @param server\n\t   */\n\t\n\t  function ReduxShareServer(store, server, options) {\n\t    _classCallCheck(this, ReduxShareServer);\n\t\n\t    /**\n\t     * Websocket Server\n\t     */\n\t    this.wss = new WebSocketServer({ server: server });\n\t\n\t    /**\n\t     * Redux store to link to the clients\n\t     */\n\t    this.store = store;\n\t\n\t    var defaultOptions = {\n\t      debug: false,\n\t      //if set, will be called at connection time. Returns the socket.\n\t      onConnection: null,\n\t      //if set, will be called before receiving each action.\n\t      onActionReceived: null,\n\t      //if set, this function will filter all actions before sending. Returns bool.\n\t      shouldSend: null,\n\t      //if true dispatches all actions received to all other connected clients. Please note that the API call to state bypasses this option.\n\t      repeaterMode: false\n\t    };\n\t\n\t    this.options = Object.assign({}, defaultOptions, options);\n\t\n\t    /**\n\t     * Bind the socket behavior\n\t     */\n\t    this.wss.on('connection', function connection(socket) {\n\t      if (typeof this.options.onConnection == 'function') {\n\t        socket = this.options.onConnection(socket) || socket;\n\t      }\n\t\n\t      socket.on('message', function incoming(message) {\n\t        this.log(\"Received from client the message \", message);\n\t\n\t        var action = JSON.parse(message);\n\t\n\t        if (typeof this.options.onActionReceived == 'function') {\n\t          action = this.options.onActionReceived.apply(this, [action, socket]);\n\t        }\n\t\n\t        this.log('Dispatching the action to the store', action);\n\t\n\t        this.store.dispatch(action);\n\t\n\t        if (this.options.broadcastMode) {\n\t          this.broadcastAction(action, function (s) {\n\t            return s !== socket;\n\t          });\n\t        }\n\t      }.bind(this));\n\t    }.bind(this));\n\t  }\n\t\n\t  /**\n\t  * Internal log function\n\t  *\n\t  */\n\t\n\t\n\t  _createClass(ReduxShareServer, [{\n\t    key: 'log',\n\t    value: function log() {\n\t      if (this.options.debug) {\n\t        var _console;\n\t\n\t        (_console = console).log.apply(_console, [\"redux-share-server: \"].concat(Array.prototype.slice.call(arguments)));\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Return an Express middleware\n\t     *\n\t     * @returns {*}\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpressMiddleware',\n\t    value: function getExpressMiddleware() {\n\t      var router = express.Router();\n\t\n\t      router.use(bodyParser.urlencoded({ extended: false }));\n\t      router.use(bodyParser.json());\n\t\n\t      router.post('/action', function (req, res) {\n\t        var action = req.body;\n\t        this.log('Dispatching an action to the store', action);\n\t        this.store.dispatch(action);\n\t        this.broadcastAction(action);\n\t        res.send(JSON.stringify({ success: true }));\n\t        res.end();\n\t      }.bind(this));\n\t\n\t      router.get('/state', function (req, res) {\n\t        res.send(JSON.stringify(this.store.getState(), null, 4));\n\t        res.end();\n\t      }.bind(this));\n\t\n\t      return router;\n\t    }\n\t\n\t    /**\n\t     * Finds a list of socket matching a property\n\t     *\n\t     * return [] if nothing found.\n\t     * @param property\n\t     * @param value.\n\t     * @returns {array}\n\t     */\n\t\n\t  }, {\n\t    key: 'findSockets',\n\t    value: function findSockets(property, value) {\n\t      return this.wss.clients.filter(function each(socket) {\n\t        return socket[property] !== undefined && socket[property] === value;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Broadcasts a message to all clients\n\t     * \n\t     * Bypasses the repeaterMode option.\n\t     * @param action\n\t     * @param senderSocket\n\t     * @returns array\n\t     */\n\t\n\t  }, {\n\t    key: 'broadcastAction',\n\t    value: function broadcastAction(action) {\n\t      var filter = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\t\n\t\n\t      this.log(\"Dispatches an action to all clients\", action);\n\t\n\t      if (typeof filter !== 'function') filter = function filter() {\n\t        return true;\n\t      };\n\t\n\t      return this.wss.clients.filter(filter).map(function each(socket) {\n\t        return this.sendToAction(action, socket);\n\t      }.bind(this));\n\t    }\n\t\n\t    /**\n\t     * Sends an action\n\t     * @param socket\n\t     * @param action\n\t     */\n\t\n\t  }, {\n\t    key: 'sendToAction',\n\t    value: function sendToAction(action, socket) {\n\t      var tracedAction = Object.assign({}, action, { origin: \"server\" });\n\t\n\t      if (typeof this.options.shouldSend == 'function' && !this.options.shouldSend.apply(this, [tracedAction, socket])) {\n\t        return;\n\t      }\n\t\n\t      this.log(\"Dispatches an action to a client\", tracedAction);\n\t\n\t      return socket.send(JSON.stringify(tracedAction));\n\t    }\n\t  }]);\n\t\n\t  return ReduxShareServer;\n\t}();\n\t\n\tmodule.exports = ReduxShareServer;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"body-parser\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"express\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"ws\");\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** server.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f78d6684d33e07cdf97c\n **/","\"use strict\";\nvar bodyParser = require('body-parser');\nvar WebSocketServer = require('ws').Server;\nvar express = require('express');\n\n\nclass ReduxShareServer {\n  /**\n   * Constructor of the server\n   *\n   * @param store\n   * @param server\n   */\n  constructor (store,\n               server,\n               options) {\n    /**\n     * Websocket Server\n     */\n    this.wss = new WebSocketServer({server: server});\n\n    /**\n     * Redux store to link to the clients\n     */\n    this.store = store;\n\n    let defaultOptions = {\n      debug:false,\n      //if set, will be called at connection time. Returns the socket.\n      onConnection:null,\n      //if set, will be called before receiving each action.\n      onActionReceived:null,\n      //if set, this function will filter all actions before sending. Returns bool.\n      shouldSend:null,\n      //if true dispatches all actions received to all other connected clients. Please note that the API call to state bypasses this option.\n      repeaterMode:false\n    };\n\n    this.options = Object.assign({},defaultOptions,options);\n\n    /**\n     * Bind the socket behavior\n     */\n    this.wss.on('connection', function connection (socket) {\n      if (typeof(this.options.onConnection) == 'function') {\n        socket = this.options.onConnection(socket) || socket;\n      }\n\n      socket.on('message', function incoming (message) {\n        this.log(\"Received from client the message \",message);\n\n        let action = JSON.parse(message);\n\n        if (typeof(this.options.onActionReceived) == 'function') {\n          action = this.options.onActionReceived.apply(this, [action, socket])\n        }\n\n        this.log('Dispatching the action to the store', action);\n\n        this.store.dispatch(action);\n\n        if (this.options.broadcastMode) {\n          this.broadcastAction(action,s => s !== socket);\n        }\n      }.bind(this));\n\n    }.bind(this));\n  }\n\n  /**\n  * Internal log function\n  *\n  */\n  log() {\n    if (this.options.debug) {\n        console.log(\"redux-share-server: \",...arguments);\n      }\n  }\n\n  /**\n   * Return an Express middleware\n   *\n   * @returns {*}\n   */\n  getExpressMiddleware () {\n    var router = express.Router();\n\n    router.use(bodyParser.urlencoded({extended: false}));\n    router.use(bodyParser.json())\n\n    router.post('/action', function (req, res) {\n      let action = req.body;\n      this.log('Dispatching an action to the store', action);\n      this.store.dispatch(action);\n      this.broadcastAction(action);\n      res.send(JSON.stringify({success: true}));\n      res.end();\n    }.bind(this));\n\n    router.get('/state', function (req, res) {\n      res.send(JSON.stringify(this.store.getState(), null, 4));\n      res.end();\n    }.bind(this));\n\n    return router;\n  }\n\n  /**\n   * Finds a list of socket matching a property\n   *\n   * return [] if nothing found.\n   * @param property\n   * @param value.\n   * @returns {array}\n   */\n  findSockets(property,value) {\n    return this.wss.clients.filter(function each (socket) {\n      return (socket[property] !== undefined && socket[property] === value);\n    });\n  }\n\n  /**\n   * Broadcasts a message to all clients\n   * \n   * Bypasses the repeaterMode option.\n   * @param action\n   * @param senderSocket\n   * @returns array\n   */\n  broadcastAction(action,filter = null) {\n\n    this.log(\"Dispatches an action to all clients\", action);\n\n    if(typeof(filter) !== 'function') filter = () => true;\n    \n    return this.wss.clients.filter(filter).map(function each (socket) {\n      return this.sendToAction(action, socket);\n    }.bind(this));\n  }\n\n\n  /**\n   * Sends an action\n   * @param socket\n   * @param action\n   */\n  sendToAction(action,socket) {\n    let tracedAction = Object.assign({},action,{origin:\"server\" });\n    \n    if( typeof(this.options.shouldSend) == 'function' && !this.options.shouldSend.apply(this, [tracedAction, socket])) {\n        return;\n    }\n\n    this.log(\"Dispatches an action to a client\", tracedAction);\n\n    return socket.send(JSON.stringify(tracedAction));\n  }\n\n}\n\nmodule.exports = ReduxShareServer;\n\n\n/** WEBPACK FOOTER **\n ** ./src/redux-share-server.js\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"ws\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ws\"\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}